<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: Arial, sans-serif;
            background-image: url('/Content/teams-background_06.png');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }

        .login-container {
            width: 450px; /* Increased from 300px to 450px */
            height: 450px; /* Set a fixed height for the box */
            margin: 100px auto;
            padding: 20px; /* Adjusted padding to maintain space around content */
            background: rgba(255, 255, 255, 0.8);
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            display: flex; /* Use flexbox for layout */
            flex-direction: column; /* Stack children vertically */
            justify-content: center; /* Center content vertically */
            align-items: center; /* Center content horizontally */
            font-size: 14px;
        }

        input {
            width: 100%; /* Make the input field fill the container */
            max-width: 400px; /* Set a maximum width */
            padding: 15px; /* Increased padding for better spacing */
            margin: 10px 0;
            box-sizing: border-box;
            font-size: 18px;
        }

        button {
            width: 100%;
            max-width: 400px; /* Match the button width to the input */
            padding: 10px;
            background: #5cb85c;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 4px;
        }

            button:hover {
                background: #4cae4c;
            }

        .register-link {
            margin-top: 10px;
            font-size: 1.2em; /* Increased font size for the register link */
            text-align: center; /* Center the text */
        }

        #loadingSpinner {
            display: none;
            text-align: center;
            margin-top: 20px;
            background: white; /* Set background color to white */
            padding: 20px; /* Add some padding */
            border-radius: 8px; /* Optional: round corners */
            position: fixed; /* Position it fixed to the center */
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%); /* Center the spinner */
            z-index: 1000; /* Make sure it appears above other content */
        }

        .spinner-border {
            width: 3rem; /* Adjust size */
            height: 3rem; /* Adjust size */
        }
    </style>




</head>
<body>
    <div class="container body-content">
        <div class="login-container">
            <h2>Login</h2>
            <form id="loginForm" action="@Url.Action("Login", "Account")" method="post">
                <input type="text" id="username" name="email" placeholder="Username" required>
                <input type="password" id="password" name="password" placeholder="Password" required>
                <button type="submit" id="loginButton">Login</button>
            </form>
            <a href="@Url.Action("Register", "Account")" class="register-link">Don't have an account? Register here</a>
            <p id="errorMsg" style="color: red;"></p>
        </div>
        <div class="text-center" style="background: rgba(255, 255, 255, 0.8); padding: 20px; border-radius: 8px; margin-bottom: 40px;">
            <h2 style="font-weight: bold; color: red; font-size: 3em;">Appointment Request Portal</h2>
        </div>

    </div>

    <div id="loadingSpinner">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
        <p>Logging in...</p>
    </div>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        document.getElementById('loginForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            // Show loading spinner
            document.getElementById('loadingSpinner').style.display = 'block';
            document.getElementById('loginButton').disabled = true;

            const email = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            const response = await fetch('@Url.Action("Login", "Account")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`
            });

            // Hide loading spinner
            document.getElementById('loadingSpinner').style.display = 'none';
            document.getElementById('loginButton').disabled = false;

            if (response.redirected) {
                window.location.href = response.url;
            } else {
                const errorMsg = document.getElementById('errorMsg');
                errorMsg.textContent = 'Invalid email or password. Please try again.';
            }
        });
    </script>
</body>
</html>
